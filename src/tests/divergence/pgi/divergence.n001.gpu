#include "cuda_runtime.h"
#include "pgi_cuda_runtime.h"
extern "C" __global__ __launch_bounds__(512) void
divergence_88_gpu(
    int tc1,
    int tc2,
    int tc3,
    signed char* p5/* uz */,
    signed char* p6/* uy */,
    signed char* p7/* ux */,
    signed char* p8/* u */,
    int x2/* nx */,
    int x3/* ny */,
    float x4/* gamma */,
    float x6/* beta */,
    float x8/* alpha */)
{
int _i_1, _i_2, _i_3, _i_4, _i_5, _i_6, _i_7, _i_8, _i_9, _i_10, _i_11, _i_12, _i_13, _i_14, _i_15, _i_16, _i_17, _i_18, _i_19, _i_20, _i_21, _i_22, _i_23, _i_24, _i_25, _i_26, _i_27, _i_28, _i_29, _i_30, _i_31;
int jj1;
int i29s;
int i31s;
int j490;
int j217;
jj1 = 0;
i29s = 0;
if( ((0)>=(tc3)))  goto _BB_6;
_BB_11: ;
i31s = 0;
if( ((0)>=(tc1)))  goto _BB_9;
_BB_12: ;
if( ((i31s)>=(tc1)))  goto _BB_13;
if( ((i29s)>=((tc3)-((int)((int)blockIdx.y)))))  goto _BB_26;
if( ((((int)((int)threadIdx.x))+(i31s))>=((tc1)-(((int)blockDim.x)*((int)blockIdx.x)))))  goto _BB_27;
if( ((0)>=(tc2)))  goto _BB_27;
j217 = tc2;
j490 = 0;
if( ((tc2)<(3)))  goto _BB_19;
_BB_31: ;
_i_1 = (((int)blockDim.x)*((int)blockIdx.x))+((int)threadIdx.x);
_i_2 = (x3/* ny */)*(x2/* nx */);
_i_3 = ((int)((int)blockIdx.y))+(i29s);
_i_4 = (i31s)*(4);
_i_5 = (x2/* nx */)*(4);
_i_6 = (_i_5)+((((_i_1)+((_i_2)*((_i_3)+(2))))*(4))+(_i_4));
_i_7 = ((_i_6)+(j490))+(4);
_i_8 = (_i_5)+((((_i_1)+((int)((_i_3)*(_i_2))))*(4))+(_i_4));
_i_9 = ((_i_8)+(j490))+(4);
_i_10 = (((_i_1)+((int)(((_i_3)+(1))*(_i_2))))*(4))+(_i_4);
_i_11 = ((x2/* nx */)*(8))+(_i_10);
_i_12 = ((_i_11)+(j490))+(4);
_i_13 = ((_i_10)+(j490))+(4);
_i_14 = (_i_5)+(_i_10);
_i_15 = (_i_14)+(j490);
_i_16 = (_i_15)+(8);
_i_17 = (_i_15)+(4);
*( float*)((p8/* u */)+((_i_17))) = (((*( float*)((p5/* uz */)+((_i_7))))-(*( float*)((p5/* uz */)+((_i_9)))))*(x4/* gamma */))+((((*( float*)((p6/* uy */)+((_i_12))))-(*( float*)((p6/* uy */)+((_i_13)))))*(x6/* beta */))+(((*( float*)((p7/* ux */)+((_i_16))))-(*( float*)((p7/* ux */)+((_i_15)))))*(x8/* alpha */)));
j490 = (j490)+(_i_5);
_i_18 = ((_i_6)+(j490))+(4);
_i_19 = ((_i_8)+(j490))+(4);
_i_20 = ((_i_11)+(j490))+(4);
_i_21 = ((_i_10)+(j490))+(4);
_i_22 = (_i_14)+(j490);
_i_23 = (_i_22)+(8);
_i_24 = (_i_22)+(4);
*( float*)((p8/* u */)+((_i_24))) = (((*( float*)((p5/* uz */)+((_i_18))))-(*( float*)((p5/* uz */)+((_i_19)))))*(x4/* gamma */))+((((*( float*)((p6/* uy */)+((_i_20))))-(*( float*)((p6/* uy */)+((_i_21)))))*(x6/* beta */))+(((*( float*)((p7/* ux */)+((_i_23))))-(*( float*)((p7/* ux */)+((_i_22)))))*(x8/* alpha */)));
j490 = (j490)+(_i_5);
_i_25 = ((_i_6)+(j490))+(4);
_i_26 = ((_i_8)+(j490))+(4);
_i_27 = ((_i_11)+(j490))+(4);
_i_28 = ((_i_10)+(j490))+(4);
_i_29 = (_i_14)+(j490);
_i_30 = (_i_29)+(8);
_i_31 = (_i_29)+(4);
*( float*)((p8/* u */)+((_i_31))) = (((*( float*)((p5/* uz */)+((_i_25))))-(*( float*)((p5/* uz */)+((_i_26)))))*(x4/* gamma */))+((((*( float*)((p6/* uy */)+((_i_27))))-(*( float*)((p6/* uy */)+((_i_28)))))*(x6/* beta */))+(((*( float*)((p7/* ux */)+((_i_30))))-(*( float*)((p7/* ux */)+((_i_29)))))*(x8/* alpha */)));
j490 = (j490)+(_i_5);
j217 = (j217)+(-3);
if( (((-2)+(j217))>0)) goto _BB_31;
if( ((j217)<=0)) goto _BB_27;
_BB_19: ;
_BB_36: ;
_i_1 = (((int)blockDim.x)*((int)blockIdx.x))+((int)threadIdx.x);
_i_2 = (x3/* ny */)*(x2/* nx */);
_i_3 = ((int)((int)blockIdx.y))+(i29s);
_i_4 = (i31s)*(4);
_i_5 = (x2/* nx */)*(4);
_i_6 = (((_i_5)+((((_i_1)+((_i_2)*((_i_3)+(2))))*(4))+(_i_4)))+(j490))+(4);
_i_7 = (((_i_5)+((((_i_1)+((int)((_i_3)*(_i_2))))*(4))+(_i_4)))+(j490))+(4);
_i_8 = (((_i_1)+((int)(((_i_3)+(1))*(_i_2))))*(4))+(_i_4);
_i_9 = ((((x2/* nx */)*(8))+(_i_8))+(j490))+(4);
_i_10 = ((_i_8)+(j490))+(4);
_i_11 = ((_i_5)+(_i_8))+(j490);
_i_12 = (_i_11)+(8);
_i_13 = (_i_11)+(4);
*( float*)((p8/* u */)+((_i_13))) = (((*( float*)((p5/* uz */)+((_i_6))))-(*( float*)((p5/* uz */)+((_i_7)))))*(x4/* gamma */))+((((*( float*)((p6/* uy */)+((_i_9))))-(*( float*)((p6/* uy */)+((_i_10)))))*(x6/* beta */))+(((*( float*)((p7/* ux */)+((_i_12))))-(*( float*)((p7/* ux */)+((_i_11)))))*(x8/* alpha */)));
j217 = (j217)+(-1);
j490 = (j490)+(_i_5);
if( ((j217)>0)) goto _BB_36;
_BB_27: ;
_BB_26: ;
_BB_13: ;
i31s = (((int)gridDim.x)*((int)blockDim.x))+(i31s);
if( ((tc1)>(i31s)))  goto _BB_12;
_BB_9: ;
i29s = ((int)((int)gridDim.y))+(i29s);
if( ((tc3)>(i29s)))  goto _BB_11;
_BB_6: ;
}
